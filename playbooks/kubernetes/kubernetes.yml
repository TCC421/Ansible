- hosts: all
  become: yes
  tasks:
   - name: install Docker
     yum:
       name: docker
       state: present
       update_cache: true

   - name: start Docker
     service:
       name: docker
       state: started
       enabled: yes

   - name: disable SELinux
     command: setenforce 0

   - name: disable SELinux on reboot
     selinux:
       state: disabled

   - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present

   - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

   - name: add Kubernetes' YUM repository
     yum_repository:
      name: Kubernetes
      description: Kubernetes YUM repository
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: yes

   - name: install kubelet
     yum:
        name: kubelet-{{ version }}
        state: present
        update_cache: true

   - name: install kubeadm
     yum:
        name: kubeadm-{{ version }}
        state: present

   - name: start kubelet
     service:
       name: kubelet
       enabled: yes
       state: started
       
- hosts: workers
  become: yes
  tasks:
   - name: firewalld master 10250/tcp
     firewalld:
      port: 10250/tcp
      permanent: yes
      state: enabled
      immediate: yes
      
   - name: firewalld master 10255/tcp
     firewalld:
      port: 10255/tcp
      permanent: yes
      state: enabled
      immediate: yes
   
   - name: firewalld master 30000-32767/tcp
     firewalld:
      port: 30000-32767/tcp
      permanent: yes
      state: enabled
      immediate: yes
   
   - name: firewalld master 6783/tcp
     firewalld:
      port: 6783/tcp
      permanent: yes
      state: enabled
      immediate: yes
   
- hosts: master
  become: yes
  tasks:
   - name: install kubectl
     yum:
        name: kubectl-{{ version }}
        state: present
        allow_downgrade: yes
        
   - name: firewalld master 6443/tcp
     firewalld:
      port: 6443/tcp
      permanent: yes
      state: enabled
      immediate: yes
      
   - name: firewalld master 2379-2380/tcp
     firewalld:
      port: 2379-2380/tcp
      permanent: yes
      state: enabled
      immediate: yes

   - name: firewalld master 10250-10252/tcp
     firewalld:
      port: 10250-10252/tcp
      permanent: yes
      state: enabled
      immediate: yes
   
   - name: firewalld master 10255/tcp
     firewalld:
      port: 10255/tcp
      permanent: yes
      state: enabled
      immediate: yes

- hosts: all
  become: yes
  tasks:
    - name: disable swap
      shell: swapoff -a

- hosts: master
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt --ignore-preflight-errors all
      args:
        chdir: $HOME
        creates: cluster_initialized.txt
    
    - name: Create a centos user
      user:
        name: centos
        password: "{{ centos_pw | password_hash('sha512') }}"
        state: present
        shell: /bin/bash 
        system: no
        createhome: yes
        home: /home/centos
    
    - name: create .kube directory
      become: yes
      become_user: centos
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/centos/.kube/config
        remote_src: yes
        owner: centos

    - name: install Pod network
      become: yes
      become_user: centos
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt
        
- hosts: master
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['master'].join_command }} --ignore-preflight-errors all  >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
