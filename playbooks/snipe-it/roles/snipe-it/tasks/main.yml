- name: install git and expect
  yum:
    state: present
    name:
      - git
      - expect
      
- name: clone snipeit repo      
  git:
    repo: https://github.com/snipe/snipe-it
    dest: /var/www/snipe-it
    force: yes
 
- name: create the .env file
  copy:
    src: /var/www/snipe-it/.env.example
    dest: /var/www/snipe-it/.env
    remote_src: yes
    
- name: install composer locally
  shell: curl -sS https://getcomposer.org/installer | php chdir=/var/www/snipe-it creates=/var/www/snipe-it/composer.phar
  
- name: mv composer.phar
  command: mv /var/www/snipe-it/composer.phar /usr/bin/composer
  
- name: 1) Edit /var/www/snipe-it/.env
  lineinfile:
    path: /var/www/snipe-it/.env
    regexp: 'APP_URL=null'
    line: 'APP_URL={{ snipeit_url }}'
    state: present

- name: 2) Edit /var/www/snipe-it/.env
  lineinfile:
    path: /var/www/snipe-it/.env
    regexp: "APP_TIMEZONE='UTC'"
    line: "'America/New_York'"
    state: present

- name: 3) Edit /var/www/snipe-it/.env
  lineinfile:
    path: /var/www/snipe-it/.env
    regexp: 'DB_DATABASE=null'
    line: 'DB_DATABASE={{ db_database }}'
    state: present

- name: 4) Edit /var/www/snipe-it/.env
  lineinfile:
    path: /var/www/snipe-it/.env
    regexp: 'DB_USERNAME=null'
    line: 'DB_USERNAME={{ db_username }}'
    state: present
    
- name: 5) Edit /var/www/snipe-it/.env
  lineinfile:
    path: /var/www/snipe-it/.env
    regexp: 'DB_PASSWORD=null'
    line: 'DB_PASSWORD={{ db_password }}'
    state: present

- name: change file and group permissions for storage
  file:
    path: /var/www/snipe-it/storage
    owner: apache
    group: apache
    recurse: yes
    mode: '0755'
    
- name: change file and group permissions for public/uploads
  file:
    path: /var/www/snipe-it/public/uploads
    owner: apache
    group: apache
    recurse: yes
    mode: '0755'
    
- name: install php requirements with composer
  shell: composer install --no-dev --prefer-source
  args:
    chdir: /var/www/snipe-it/
    
- name: generate production app key
  shell: yes | php artisan key:generate
  args:
    chdir: /var/www/snipe-it/
    
- name: Set selinux policy for directories
  sefcontext:
   target: '{{ item.target }}(/.*)?'
   setype: "{{ item.setype }}"
   state: present
  register: filecontext
  with_items:
   - { target: '/var/www/snipe-it/storage(/.*)?', setype: 'httpd_sys_content_t' }
   - { target: '/var/www/snipe-it/storage(/.*)?', setype: 'httpd_sys_rw_content_t' }
   - { target: '/var/www/snipe-it/public(/.*)?', setype: 'httpd_sys_content_t' }
   - { target: '/var/www/snipe-it/public(/.*)?', setype: 'httpd_sys_rw_content_t' }
   
- name: Apply new SELinux file context to filesystem
  command: "restorecon -RFvv /var/www/snipe-it/{{ item }}"
  with_items:
    - 'public'
    - 'storage'

- name: create virtual host
  blockinfile:
    path: /etc/httpd/conf.d/snipeit.example.com.conf
    create: yes
    marker: ""
    block: |
      <VirtualHost *:80>
        ServerName snipeit.YourDomain.com
        DocumentRoot /var/www/snipe-it/public
        <Directory /var/www/snipe-it/public>
          Options Indexes FollowSymLinks MultiViews
          AllowOverride All
          Order allow,deny
          allow from all
        </Directory>
      </VirtualHost>

- name: restart apache
  service:
    name: httpd
    state: restarted
